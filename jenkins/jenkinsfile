pipeline {
    agent {
        docker {
            image 'my-jenkins-devops:latest'
            args '-v $HOME/jenkins_shared:/var/jenkins_home/workspace'
        }
    }

    environment {
        KUBECONFIG = '/root/.kube/config'
    }

    stages {
        stage('Checkout') {
            steps {
                deleteDir()
                checkout scm
            }
        }

        stage('Build and Deploy') {
            steps {
                script {
                    echo '‚úÖ Loading environment variables...'
                    def envFile = readFile('.env')
                    envFile.split('\n').each {
                        if (it && !it.startsWith('#')) {
                            def (k, v) = it.trim().split('=')
                            env[k] = v
                        }
                    }

                    echo 'üöÄ Building portfolio app...'
                    sh 'chmod +x scripts/buildmyportfolio.sh'
                    sh './scripts/buildmyportfolio.sh'
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                sh 'kubectl config current-context'
                sh 'kubectl get pods'
                sh 'kubectl apply -f k8s/deployment.yml --validate=false'
            }
        }

        stage('Ansible Post Deploy Config') {
            steps {
                sh 'ansible-playbook ansible/deploy.yml'
            }
        }
    }

    post {
        always {
            script {
                echo 'üßπ Cleaning up workspace...'
                // Only do this in a valid node context, not in a container-only step
                deleteDir()
                sh 'rm -rf node_modules || true'
            }
        }
        failure {
            echo '‚ùå Build failed!'
        }
        success {
            echo '‚úÖ Build succeeded!'
        }
    }
}
