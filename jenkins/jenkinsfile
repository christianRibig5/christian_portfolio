pipeline {
    agent any

    environment {
        KUBECONFIG = '/root/.kube/config'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build and Deploy') {
            agent {
                docker {
                    image 'my-jenkins-devops:latest'
                    args '-v $HOME/jenkins_shared:/var/jenkins_home/workspace'
                }
            }
            steps {
                script {
                    echo '‚úÖ Loading environment variables...'
                    def envFile = readFile('.env')
                    def lines = envFile.split('\n')
                    for (line in lines) {
                        if (line.trim() && !line.startsWith('#')) {
                            def (key, value) = line.split('=')
                            env."${key}" = value
                        }
                    }

                    echo 'üöÄ Building portfolio app...'
                    sh 'chmod +x scripts/buildmyportfolio.sh'
                    sh './scripts/buildmyportfolio.sh'

                    echo '‚ò∏Ô∏è Deploying to Kubernetes...'
                    sh 'kubectl config current-context'
                    sh 'kubectl get pods'
                    sh 'kubectl apply -f k8s/deployment.yml --validate=false'

                    echo 'üîß Running Ansible configuration...'
                    sh 'ansible-playbook ansible/deploy.yml'
                }
            }
        }
    }

    post {
        always {
            node {
                echo 'üßπ Cleaning up Jenkins workspace...'
                deleteDir()
                sh 'rm -rf node_modules || true'
            }
        }
        failure {
            echo '‚ùå Build failed!'
        }
        success {
            echo '‚úÖ Build succeeded!'
        }
    }
}
